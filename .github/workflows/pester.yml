name: Pester Tests

on:
  push:
    paths:
      - '**.ps1'
      - '.github/workflows/pester.yml'
      - 'tests/**'
  pull_request:
    paths:
      - '**.ps1'
      - '.github/workflows/pester.yml'
      - 'tests/**'

jobs:
  test:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Pester 5.x
        shell: pwsh
        run: Install-Module -Name Pester -Force -SkipPublisherCheck -RequiredVersion 5.5.0
      - name: Install Pester 5.5.0
        shell: pwsh
        run: |
          Install-Module -Name Pester -Force -SkipPublisherCheck -RequiredVersion 5.5.0

      - name: Import correct Pester version
        shell: pwsh
        run: |
          Import-Module Pester -Force -RequiredVersion 5.5.0

      - name: Debug Pester version and files
        shell: pwsh
        run: |
          Get-Module Pester | Format-List
          Get-Module -ListAvailable Pester | Format-List Name,Version,Path

      - name: Run Pester tests with coverage
        shell: pwsh
        run: |
          Import-Module Pester -Force -RequiredVersion 5.5.0
          $config = New-PesterConfiguration
          $config.Run.Path = 'tests'
          $config.CodeCoverage.Enabled = $true
          $config.CodeCoverage.Path = 'cert-exporter.ps1'
          $config.Output.Verbosity = 'Detailed'
          $res = Invoke-Pester -Configuration $config -PassThru
          Write-Host "Coverage %: $($res.CodeCoverage.Percent)"
          if ($res.CodeCoverage.Percent -lt 80) { exit 1 }
